{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hoang_macbook/Desktop/Main/Me/website/explore/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport './App.css';\nimport * as THREE from 'three';\nimport { Vector3, TextureLoader, RepeatWrapping } from 'three';\nimport React, { useState, useRef, Component, useEffect } from 'react';\nimport { Canvas, useLoader } from 'react-three-fiber';\nimport { OrbitControls, Sky } from 'drei';\nimport { useBox, usePlane, Physics } from 'use-cannon';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport SphereBot from './assets/sphere_bot/scene.gltf';\nimport { Player } from './Player';\nimport dirt from './assets/dirt.jpg'; // import {PointerLockControls} from './PointerLockControls'\n\nimport { Camera } from './Camera';\n\nfunction useKey(key, cb) {\n  _s();\n\n  const callbackRef = useRef(cb);\n  useEffect(() => {\n    callbackRef.current = cb;\n  });\n  useEffect(() => {\n    function handle(event) {\n      if (event.code === key) {\n        callbackRef.current(event);\n      }\n    }\n\n    document.addEventListener('keypress', handle);\n    return () => document.removeEventListener('keypress', handle);\n  }, [key]);\n}\n\n_s(useKey, \"K/h/7jNaRWXLP/aFqUkOqhPUWKE=\");\n\nfunction Bot() {\n  _s2();\n\n  const gltf = useLoader(GLTFLoader, SphereBot);\n  return /*#__PURE__*/_jsxDEV(\"primitive\", {\n    object: gltf.scene,\n    position: [0, 5, 0]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this);\n}\n\n_s2(Bot, \"/mQP3JhHVfBVax7R1fyeo+Vn9YY=\", false, function () {\n  return [useLoader];\n});\n\n_c = Bot;\n\nfunction App() {\n  _s4();\n\n  var _s3 = $RefreshSig$();\n\n  // ground texture\n  const texture = new TextureLoader().load(dirt);\n  texture.wrapS = RepeatWrapping;\n  texture.wrapT = RepeatWrapping;\n  texture.repeat.set(240, 240); // ground\n\n  function Ground(props) {\n    _s3();\n\n    const [ref] = usePlane(() => ({\n      rotation: [-Math.PI / 2, 0, 0],\n      ...props\n    }));\n    return /*#__PURE__*/_jsxDEV(\"mesh\", {\n      ref: ref,\n      children: [/*#__PURE__*/_jsxDEV(\"planeBufferGeometry\", {\n        attach: \"geometry\",\n        args: [200, 200]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        attach: \"material\",\n        color: \"#e48080\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n  _s3(Ground, \"ZXiOMq8W1xHEoXd0svPT/ZkHa4A=\", false, function () {\n    return [usePlane];\n  });\n\n  const [camX, setCamX] = useState(15);\n  const [camY, setCamY] = useState(5);\n  const [camZ, setCamZ] = useState(25);\n  var camera, scene, renderer;\n  var mouse = new THREE.Vector2();\n  var raycaster = new THREE.Raycaster();\n  var vertex = new THREE.Vector3();\n  document.addEventListener('click', event => {\n    mouse.x = event.clientX / window.innerWidth * 2 - 1;\n    mouse.y = -(event.clientY / window.innerHeight) * 2 - 1;\n    raycaster.setFromCamera(mouse, camera); // camera.position.x = mouse.x\n    // camera.position.y = mouse.y\n\n    setCamX(mouse.x);\n  }, false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Canvas, {\n      shadowMap: true,\n      sRGB: true,\n      gl: {\n        alpha: false\n      },\n      onCreated: ({\n        gl,\n        scene\n      }) => {\n        scene.background = new THREE.Color('lightblue');\n        gl.shadowMap.enabled = true;\n        gl.shadowMap.type = THREE.PCFSoftShadowMap;\n      },\n      children: [/*#__PURE__*/_jsxDEV(OrbitControls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Sky, {\n        sunPosition: new Vector3(100, 10, 100)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {\n        intensity: 0.3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n        castShadow: true,\n        intensity: 0.8,\n        position: [100, 100, 100]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Camera, {\n        position: [camX, camY, camZ]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Physics, {\n        gravity: [0, -30, 0],\n        children: [/*#__PURE__*/_jsxDEV(Ground, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PointerLockControls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Player, {\n          id: \"player1\",\n          position: [0, 10, 0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s4(App, \"VNRd/L+nHt4LDNVfDlq7xxK/PNc=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Bot\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/hoang_macbook/Desktop/Main/Me/website/explore/src/App.js"],"names":["THREE","Vector3","TextureLoader","RepeatWrapping","React","useState","useRef","Component","useEffect","Canvas","useLoader","OrbitControls","Sky","useBox","usePlane","Physics","GLTFLoader","SphereBot","Player","dirt","Camera","useKey","key","cb","callbackRef","current","handle","event","code","document","addEventListener","removeEventListener","Bot","gltf","scene","App","texture","load","wrapS","wrapT","repeat","set","Ground","props","ref","rotation","Math","PI","camX","setCamX","camY","setCamY","camZ","setCamZ","camera","renderer","mouse","Vector2","raycaster","Raycaster","vertex","x","clientX","window","innerWidth","y","clientY","innerHeight","setFromCamera","alpha","gl","background","Color","shadowMap","enabled","type","PCFSoftShadowMap"],"mappings":"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","sourcesContent":["import './App.css';\nimport * as THREE from 'three'\n\nimport { Vector3, TextureLoader, RepeatWrapping } from 'three'\nimport React, { useState, useRef, Component, useEffect } from 'react'\nimport { Canvas, useLoader } from 'react-three-fiber'\nimport { OrbitControls, Sky } from 'drei'\nimport { useBox, usePlane, Physics } from 'use-cannon'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport SphereBot from './assets/sphere_bot/scene.gltf'\nimport { Player } from './Player'\nimport dirt from './assets/dirt.jpg'\n// import {PointerLockControls} from './PointerLockControls'\nimport {Camera} from './Camera'\n\nfunction useKey(key, cb){\n  const callbackRef = useRef(cb)\n  useEffect(()=>{\n    callbackRef.current = cb\n  })\n\n  useEffect(()=>{\n    function handle(event){\n      if(event.code ===key){\n        callbackRef.current(event)\n      }\n    }\n    document.addEventListener('keypress', handle)\n    return () => document.removeEventListener('keypress', handle)\n  }, [key])\n}\n\nfunction Bot() {\n  const gltf = useLoader(GLTFLoader, SphereBot)\n  return <primitive object={gltf.scene} position={[0, 5, 0]} />\n}\n\nfunction App() {\n\n  // ground texture\n  const texture = new TextureLoader().load(dirt);\n  texture.wrapS = RepeatWrapping;\n  texture.wrapT = RepeatWrapping;\n  texture.repeat.set(240, 240);\n\n\n  // ground\n  function Ground(props) {\n    const [ref] = usePlane(() => ({ rotation: [-Math.PI / 2, 0, 0], ...props }))\n    return (\n      <mesh ref={ref}>\n        <planeBufferGeometry attach=\"geometry\" args={[200, 200]} />\n        <meshStandardMaterial  attach=\"material\" color=\"#e48080\" />\n      </mesh>\n    )\n  }\n  \n  const [camX, setCamX] = useState(15)\n  const [camY, setCamY] = useState(5)\n  const [camZ, setCamZ] = useState(25)\n\n  var camera, scene, renderer\n  var mouse = new THREE.Vector2()\n  var raycaster = new THREE.Raycaster()\n  var vertex = new THREE.Vector3()\n\n  document.addEventListener(\n    'click', event => {\n      mouse.x = event.clientX / window.innerWidth * 2 - 1\n      mouse.y = -(event.clientY / window.innerHeight) * 2 - 1\n      raycaster.setFromCamera(mouse, camera)\n      // camera.position.x = mouse.x\n      // camera.position.y = mouse.y\n      setCamX(mouse.x)\n    },\n    false\n  )\n\n\n\n\n  return (\n    <>\n      <Canvas shadowMap sRGB gl={{ alpha: false }}\n        \n        onCreated={({ gl, scene }) => {\n          scene.background = new THREE.Color('lightblue');\n          gl.shadowMap.enabled = true;\n          gl.shadowMap.type = THREE.PCFSoftShadowMap;\n        }}>\n          <OrbitControls/>\n        <Sky sunPosition={new Vector3(100, 10, 100)}/>\n        <ambientLight intensity={0.3}/>\n        <pointLight \n          castShadow\n          intensity={0.8}\n          position={[100, 100, 100]}\n        />\n        <Camera position={[camX,camY,camZ]} />\n\n\n        <Physics gravity={[0,-30,0]} >\n          <Ground />\n          <PointerLockControls />\n          <Player id='player1' position={[0, 10, 0]} />\n        </Physics>\n      </Canvas>\n\n    </>\n  );\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}