{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hoang_macbook/Desktop/Main/Me/website/explore/src/App.js\",\n    _s = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport './App.css';\nimport * as THREE from 'three';\nimport { Vector3, TextureLoader, RepeatWrapping } from 'three';\nimport React, { useState, useRef, Component, useEffect } from 'react';\nimport { Canvas, useLoader } from 'react-three-fiber';\nimport { OrbitControls, Sky } from 'drei';\nimport { useBox, usePlane, Physics } from 'use-cannon';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport SphereBot from './assets/sphere_bot/scene.gltf';\nimport { Player } from './Player';\nimport dirt from './assets/dirt.jpg';\nimport { PointerLockControls } from './PointerLockControls';\nimport { Camera } from './Camera';\n\nfunction Bot() {\n  _s();\n\n  const gltf = useLoader(GLTFLoader, SphereBot);\n  return /*#__PURE__*/_jsxDEV(\"primitive\", {\n    object: gltf.scene,\n    position: [0, 5, 0]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Bot, \"/mQP3JhHVfBVax7R1fyeo+Vn9YY=\", false, function () {\n  return [useLoader];\n});\n\n_c = Bot;\n\nfunction App() {\n  _s3();\n\n  var _s2 = $RefreshSig$();\n\n  // ground texture\n  const texture = new TextureLoader().load(dirt);\n  texture.wrapS = RepeatWrapping;\n  texture.wrapT = RepeatWrapping;\n  texture.repeat.set(240, 240); // ground\n\n  function Ground(props) {\n    _s2();\n\n    const [ref] = usePlane(() => ({\n      rotation: [-Math.PI / 2, 0, 0],\n      ...props\n    }));\n    return /*#__PURE__*/_jsxDEV(\"mesh\", {\n      ref: ref,\n      children: [/*#__PURE__*/_jsxDEV(\"planeBufferGeometry\", {\n        attach: \"geometry\",\n        args: [200, 200]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        attach: \"material\",\n        color: \"#e48080\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n  _s2(Ground, \"ZXiOMq8W1xHEoXd0svPT/ZkHa4A=\", false, function () {\n    return [usePlane];\n  });\n\n  const [camX, setCamx] = useState(0);\n  const [camY, setCamY] = useState(0);\n  const [camZ, setCamZ] = useState(0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Canvas, {\n      shadowMap: true,\n      sRGB: true,\n      gl: {\n        alpha: false\n      },\n      onCreated: ({\n        gl,\n        scene\n      }) => {\n        scene.background = new THREE.Color('lightblue');\n        gl.shadowMap.enabled = true;\n        gl.shadowMap.type = THREE.PCFSoftShadowMap;\n      },\n      children: [/*#__PURE__*/_jsxDEV(Sky, {\n        sunPosition: new Vector3(100, 10, 100)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {\n        intensity: 0.3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n        castShadow: true,\n        intensity: 0.8,\n        position: [100, 100, 100]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Camera, {\n        position: [5, 5, 5]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Physics, {\n        gravity: [0, -30, 0],\n        children: [/*#__PURE__*/_jsxDEV(Ground, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PointerLockControls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Player, {\n          position: [0, 5, 0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s3(App, \"KNP3jAT3mycZjrImCxxgP9cMJMw=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Bot\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/hoang_macbook/Desktop/Main/Me/website/explore/src/App.js"],"names":["THREE","Vector3","TextureLoader","RepeatWrapping","React","useState","useRef","Component","useEffect","Canvas","useLoader","OrbitControls","Sky","useBox","usePlane","Physics","GLTFLoader","SphereBot","Player","dirt","PointerLockControls","Camera","Bot","gltf","scene","App","texture","load","wrapS","wrapT","repeat","set","Ground","props","ref","rotation","Math","PI","camX","setCamx","camY","setCamY","camZ","setCamZ","alpha","gl","background","Color","shadowMap","enabled","type","PCFSoftShadowMap"],"mappings":"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","sourcesContent":["import './App.css';\nimport * as THREE from 'three'\nimport { Vector3, TextureLoader, RepeatWrapping } from 'three'\nimport React, { useState, useRef, Component, useEffect } from 'react'\nimport { Canvas, useLoader } from 'react-three-fiber'\nimport { OrbitControls, Sky } from 'drei'\nimport { useBox, usePlane, Physics } from 'use-cannon'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport SphereBot from './assets/sphere_bot/scene.gltf'\nimport { Player } from './Player'\nimport dirt from './assets/dirt.jpg'\nimport {PointerLockControls} from './PointerLockControls'\nimport {Camera} from './Camera'\n\n\nfunction Bot() {\n  const gltf = useLoader(GLTFLoader, SphereBot)\n  return <primitive object={gltf.scene} position={[0, 5, 0]} />\n}\n\nfunction App() {\n\n  // ground texture\n  const texture = new TextureLoader().load(dirt);\n  texture.wrapS = RepeatWrapping;\n  texture.wrapT = RepeatWrapping;\n  texture.repeat.set(240, 240);\n\n\n  // ground\n  function Ground(props) {\n    const [ref] = usePlane(() => ({ rotation: [-Math.PI / 2, 0, 0], ...props }))\n    return (\n      <mesh ref={ref}>\n        <planeBufferGeometry attach=\"geometry\" args={[200, 200]} />\n        <meshStandardMaterial  attach=\"material\" color=\"#e48080\" />\n      </mesh>\n    )\n  }\n  \n  const [camX, setCamx] = useState(0)\n  const [camY, setCamY] = useState(0)\n  const [camZ, setCamZ] = useState(0)\n\n  return (\n    <>\n      <Canvas shadowMap sRGB gl={{ alpha: false }}\n        \n        onCreated={({ gl, scene }) => {\n          scene.background = new THREE.Color('lightblue');\n          gl.shadowMap.enabled = true;\n          gl.shadowMap.type = THREE.PCFSoftShadowMap;\n        }}>\n          {/* <OrbitControls/> */}\n        <Sky sunPosition={new Vector3(100, 10, 100)}/>\n        <ambientLight intensity={0.3}/>\n        <pointLight \n          castShadow\n          intensity={0.8}\n          position={[100, 100, 100]}\n        />\n        <Camera position={[5,5,5]} />\n\n\n        <Physics gravity={[0,-30,0]} >\n          <Ground />\n          <PointerLockControls />\n          <Player position={[0,5,0]}/>\n        </Physics>\n      </Canvas>\n\n    </>\n  );\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}