{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hoang_macbook/Desktop/Main/Me/website/explore/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport './App.css';\nimport * as THREE from 'three';\nimport { Vector3 } from 'three';\nimport React, { useState, useRef, Component, useEffect } from 'react';\nimport { Canvas, useLoader } from 'react-three-fiber';\nimport { OrbitControls, Sky } from 'drei';\nimport { useBox, usePlane, Physics } from 'use-cannon';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport SphereBot from './assets/sphere_bot/scene.gltf';\nimport { RotCube } from './Cube';\n\nfunction Cube(props) {\n  _s();\n\n  const [ref, api] = useBox(() => ({\n    mass: 1,\n    position: [0, 5, 0],\n    ...props\n  }));\n  const mesh = useRef(null);\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    onClick: () => {\n      // api.velocity.set(0,5,0)\n      api.velocity.set(20 * (Math.random() - 0.5), 0, 20 * (Math.random() - 0.5));\n    },\n    ref: ref,\n    children: [/*#__PURE__*/_jsxDEV(\"boxBufferGeometry\", {\n      attach: \"geometry\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      attach: \"material\",\n      color: \"#50c878\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Cube, \"2YMHhmuMJ7sXQ7w+iOISbDIXGco=\", false, function () {\n  return [useBox];\n});\n\n_c = Cube;\n\nfunction Bot() {\n  _s2();\n\n  const gltf = useLoader(GLTFLoader, SphereBot);\n  return /*#__PURE__*/_jsxDEV(\"primitive\", {\n    object: gltf.scene,\n    position: [0, 5, 0]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 10\n  }, this);\n}\n\n_s2(Bot, \"/mQP3JhHVfBVax7R1fyeo+Vn9YY=\", false, function () {\n  return [useLoader];\n});\n\n_c2 = Bot;\n\nfunction App() {\n  var _s3 = $RefreshSig$();\n\n  function Plane(props) {\n    _s3();\n\n    const [ref] = usePlane(() => ({\n      rotation: [-Math.PI / 2, 0, 0],\n      ...props\n    }));\n    return /*#__PURE__*/_jsxDEV(\"mesh\", {\n      ref: ref,\n      children: [/*#__PURE__*/_jsxDEV(\"planeBufferGeometry\", {\n        attach: \"geometry\",\n        args: [200, 200]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        attach: \"material\",\n        color: \"linear-gradient(rgba(250,0,0,0.5),transparent)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n\n  _s3(Plane, \"ZXiOMq8W1xHEoXd0svPT/ZkHa4A=\", false, function () {\n    return [usePlane];\n  });\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Canvas, {\n      camera: {\n        position: [5, 5, 5],\n        fov: 65\n      },\n      onCreated: ({\n        gl,\n        scene\n      }) => {\n        scene.background = new THREE.Color('lightblue');\n        gl.shadowMap.enabled = true;\n        gl.shadowMap.type = THREE.PCFSoftShadowMap;\n      },\n      children: [/*#__PURE__*/_jsxDEV(Sky, {\n        sunPosition: new Vector3(100, 10, 100)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {\n        intensity: 0.3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n        castShadow: true,\n        intensity: 0.8,\n        position: [100, 100, 100]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Physics, {\n        children: [/*#__PURE__*/_jsxDEV(Ground, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Player, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c3 = App;\nexport default App;\n{\n  /* <spotLight \n           intensity={0.5}\n           position={[10,15,10]}\n           angle={0.3}\n         /> */\n}\n{\n  /* <RotCube position={[0,5,0]}/> */\n}\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Cube\");\n$RefreshReg$(_c2, \"Bot\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/hoang_macbook/Desktop/Main/Me/website/explore/src/App.js"],"names":["THREE","Vector3","React","useState","useRef","Component","useEffect","Canvas","useLoader","OrbitControls","Sky","useBox","usePlane","Physics","GLTFLoader","SphereBot","RotCube","Cube","props","ref","api","mass","position","mesh","velocity","set","Math","random","Bot","gltf","scene","App","Plane","rotation","PI","fov","gl","background","Color","shadowMap","enabled","type","PCFSoftShadowMap"],"mappings":"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","sourcesContent":["import './App.css';\nimport * as THREE from 'three'\nimport { Vector3 } from 'three'\nimport React, { useState, useRef, Component, useEffect } from 'react'\nimport { Canvas, useLoader } from 'react-three-fiber'\nimport { OrbitControls, Sky } from 'drei'\nimport { useBox, usePlane, Physics } from 'use-cannon'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport SphereBot from './assets/sphere_bot/scene.gltf'\nimport { RotCube } from './Cube'\n\n\n\n\n\n\nfunction Cube(props) {\n  const [ref, api] = useBox(() => ({ mass: 1, position: [0, 5, 0], ...props }))\n  const mesh = useRef(null)\n  \n\n  return (\n    <mesh \n      onClick={()=>{\n      // api.velocity.set(0,5,0)\n\n      api.velocity.set(20*(Math.random()-0.5),0,20*(Math.random()-0.5))\n      \n      }} \n      ref={ref}>\n      <boxBufferGeometry attach=\"geometry\" />\n      <meshStandardMaterial attach='material' color='#50c878' />\n    </mesh>\n  )\n}\n\nfunction Bot() {\n  const gltf = useLoader(GLTFLoader, SphereBot)\n  return <primitive object={gltf.scene} position={[0, 5, 0]} />\n}\n\nfunction App() {\n\n\n\n\n  \n  \n\n  function Plane(props) {\n    const [ref] = usePlane(() => ({ rotation: [-Math.PI / 2, 0, 0], ...props }))\n    return (\n      <mesh ref={ref}>\n        <planeBufferGeometry attach=\"geometry\" args={[200, 200]} />\n        <meshStandardMaterial attach='material' color='linear-gradient(rgba(250,0,0,0.5),transparent)' />\n      </mesh>\n    )\n  }\n  \n\n\n\n\n  return (\n    <>\n\n      <Canvas camera={{ position: [5, 5, 5], fov: 65 }}\n        onCreated={({ gl, scene }) => {\n          scene.background = new THREE.Color('lightblue');\n          gl.shadowMap.enabled = true;\n          gl.shadowMap.type = THREE.PCFSoftShadowMap;\n        }}>\n      \n        <Sky sunPosition={new Vector3(100,10,100)} />\n        <OrbitControls />\n        <ambientLight intensity={0.3} />\n        <pointLight castShadow intensity={0.8} position={[100,100,100]} />\n        \n          \n\n        <Physics>\n          <Ground />\n          <Player />\n          \n\n\n\n\n        </Physics>\n      </Canvas>\n\n    </>\n  );\n}\n\nexport default App;\n\n{/* <spotLight \n          intensity={0.5}\n          position={[10,15,10]}\n          angle={0.3}\n        /> */}\n\n{/* <RotCube position={[0,5,0]}/> */}\n"]},"metadata":{},"sourceType":"module"}