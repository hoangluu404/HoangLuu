{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hoang_macbook/Desktop/Main/Me/website/explore/src/Cube.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSpring } from '@react-spring/core';\nimport { a } from '@react-spring/three';\nexport const RotCube = ({\n  position\n}) => {\n  _s();\n\n  const [active, setActive] = useState(false);\n  useEffect(() => {\n    let timeout;\n\n    const toggleActive = () => {\n      timeout = setTimeout(() => {\n        setActive(!active);\n      }, Math.random() * 2000 + 1000);\n    };\n\n    toggleActive();\n    return () => {\n      clearTimeout(timeout);\n    };\n  });\n  const {\n    spring\n  } = useSpring({\n    spring: active,\n    config: {\n      mass: 5,\n      tension: 400,\n      friction: 50,\n      precision: 0.0001\n    }\n  });\n  const scale = spring.to([0, 1], [1, 2]);\n  const rotation = spring.to([0, 1], [0, Math.PI / 2]);\n  const color = spring.to([0, 1], ['#50c878', '#e45858']);\n  return /*#__PURE__*/_jsxDEV(a.mesh, {\n    \"rotation-y\": rotation,\n    \"scale-x\": scale,\n    \"scale-y\": scale,\n    \"scale-z\": scale,\n    position: position,\n    children: [/*#__PURE__*/_jsxDEV(\"boxBufferGeometry\", {\n      attach: \"geometry\",\n      args: [1, 1, 1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(a.meshStandardMaterial, {\n      roughness: \"0.5\",\n      attach: \"material\",\n      color: color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RotCube, \"BxrnYkGX6t8VrxYYXFySOElw6Qw=\", false, function () {\n  return [useSpring];\n});\n\n_c = RotCube;\n\nvar _c;\n\n$RefreshReg$(_c, \"RotCube\");","map":{"version":3,"sources":["/Users/hoang_macbook/Desktop/Main/Me/website/explore/src/Cube.js"],"names":["React","useState","useEffect","useRef","useSpring","a","RotCube","position","active","setActive","timeout","toggleActive","setTimeout","Math","random","clearTimeout","spring","config","mass","tension","friction","precision","scale","to","rotation","PI","color"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,CAAT,QAAkB,qBAAlB;AACA,OAAO,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAErC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,KAAD,CAApC;AAEAC,EAAAA,SAAS,CAAG,MAAM;AACd,QAAIQ,OAAJ;;AACA,UAAMC,YAAY,GAAG,MAAM;AACvBD,MAAAA,OAAO,GAAGE,UAAU,CAAE,MAAM;AACxBH,QAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACH,OAFmB,EAEjBK,IAAI,CAACC,MAAL,KAAgB,IAAhB,GAAuB,IAFN,CAApB;AAGH,KAJD;;AAKAH,IAAAA,YAAY;AACZ,WAAO,MAAI;AACPI,MAAAA,YAAY,CAACL,OAAD,CAAZ;AACH,KAFD;AAGH,GAXQ,CAAT;AAaA,QAAM;AAACM,IAAAA;AAAD,MAAWZ,SAAS,CAAC;AACvBY,IAAAA,MAAM,EAAER,MADe;AAEvBS,IAAAA,MAAM,EAAE;AAAEC,MAAAA,IAAI,EAAC,CAAP;AAAUC,MAAAA,OAAO,EAAE,GAAnB;AAAwBC,MAAAA,QAAQ,EAAE,EAAlC;AAAsCC,MAAAA,SAAS,EAAE;AAAjD;AAFe,GAAD,CAA1B;AAKA,QAAMC,KAAK,GAAGN,MAAM,CAACO,EAAP,CAAU,CAAC,CAAD,EAAG,CAAH,CAAV,EAAiB,CAAC,CAAD,EAAG,CAAH,CAAjB,CAAd;AACA,QAAMC,QAAQ,GAAGR,MAAM,CAACO,EAAP,CAAU,CAAC,CAAD,EAAG,CAAH,CAAV,EAAiB,CAAC,CAAD,EAAGV,IAAI,CAACY,EAAL,GAAQ,CAAX,CAAjB,CAAjB;AACA,QAAMC,KAAK,GAAGV,MAAM,CAACO,EAAP,CAAU,CAAC,CAAD,EAAG,CAAH,CAAV,EAAgB,CAAC,SAAD,EAAW,SAAX,CAAhB,CAAd;AAEA,sBACI,QAAC,CAAD,CAAG,IAAH;AACI,kBAAYC,QADhB;AAEI,eAASF,KAFb;AAGI,eAASA,KAHb;AAII,eAASA,KAJb;AAKI,IAAA,QAAQ,EAAEf,QALd;AAAA,4BAQQ;AAAmB,MAAA,MAAM,EAAC,UAA1B;AAAqC,MAAA,IAAI,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL;AAA3C;AAAA;AAAA;AAAA;AAAA,YARR,eASQ,QAAC,CAAD,CAAG,oBAAH;AAAwB,MAAA,SAAS,EAAC,KAAlC;AAAwC,MAAA,MAAM,EAAC,UAA/C;AAA0D,MAAA,KAAK,EAAEmB;AAAjE;AAAA;AAAA;AAAA;AAAA,YATR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAxCM;;GAAMpB,O;UAiBQF,S;;;KAjBRE,O","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport { useSpring } from '@react-spring/core'\nimport { a } from '@react-spring/three'\nexport const RotCube = ({ position }) => {\n\n    const [active, setActive] = useState(false)\n\n    useEffect ( () => {\n        let timeout\n        const toggleActive = () => {\n            timeout = setTimeout( () => {\n                setActive(!active)\n            }, Math.random() * 2000 + 1000)\n        }\n        toggleActive()\n        return ()=>{\n            clearTimeout(timeout)\n        }\n    })\n    \n    const {spring} = useSpring({\n        spring: active,\n        config: { mass:5, tension: 400, friction: 50, precision: 0.0001 }\n    })\n\n    const scale = spring.to([0,1], [1,2])\n    const rotation = spring.to([0,1], [0,Math.PI/2])\n    const color = spring.to([0,1],['#50c878','#e45858'])\n\n    return(\n        <a.mesh\n            rotation-y={rotation}\n            scale-x={scale}\n            scale-y={scale}\n            scale-z={scale}\n            position={position}\n\n            >\n                <boxBufferGeometry attach='geometry' args={[1,1,1]} />\n                <a.meshStandardMaterial roughness='0.5' attach='material' color={color} />\n            </a.mesh>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}