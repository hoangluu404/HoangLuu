{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hoang_macbook/Desktop/Main/Me/website/explore/src/Cube.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSpring } from '@react-spring/core';\nimport { a } from \"@react-spring/three\";\nimport { useBox } from 'use-cannon';\n\nfunction useKey(key, cb) {\n  _s();\n\n  const callbackRef = useRef(cb);\n  useEffect(() => {\n    callbackRef.current = cb;\n  });\n  useEffect(() => {\n    function handle(event) {\n      if (event.code === key) {\n        callbackRef.current(event);\n      }\n    }\n\n    document.addEventListener('keypress', handle);\n    return () => document.removeEventListener('keypress', handle);\n  }, [key]);\n}\n\n_s(useKey, \"K/h/7jNaRWXLP/aFqUkOqhPUWKE=\");\n\nexport const Player = ({\n  position\n}, props) => {\n  _s2();\n\n  const [active, setActive] = useState(0);\n  const activeRef = useRef(active);\n  activeRef.current = active;\n  const mesh = useRef(null);\n  useEffect(() => {\n    let timeout;\n\n    const toggleActive = () => {\n      timeout = setTimeout(() => {\n        setActive(Number(!activeRef.current));\n        toggleActive();\n      }, Math.random() * 2000 + 1000);\n    };\n\n    toggleActive();\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, []);\n  const {\n    spring\n  } = useSpring({\n    spring: active,\n    config: {\n      mass: 5,\n      tension: 400,\n      friction: 50,\n      precision: 0.0001\n    }\n  });\n  const scale = spring.to([0, 1], [1, 2]);\n  const rotation = spring.to([0, 1], [0, Math.PI]);\n  const color = spring.to([0, 1], [\"#50c878\", \"#e45858\"]);\n  const [ref, api] = useBox(() => ({\n    mass: 1,\n    position: position,\n    rotation: [Math.random() * 10 - 5, Math.random() * 10 - 5, Math.random() * 10 - 5],\n    ...props\n  }));\n  useKey('KeyQ', () => {});\n  useKey('KeyW', () => {});\n  useKey('KeyE', () => {});\n  useKey('KeyR', () => {});\n  return /*#__PURE__*/_jsxDEV(a.mesh, {\n    ref: ref,\n    onClick: () => {\n      // api.velocity.set(0,5,0)\n      if (!active) api.velocity.set(20 * (Math.random() - 0.5), 0, 20 * (Math.random() - 0.5));\n    },\n    rotation: [0, rotation, 0],\n    position: position,\n    children: [/*#__PURE__*/_jsxDEV(\"boxBufferGeometry\", {\n      attach: \"geometry\",\n      args: [1, 1, 1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(a.meshStandardMaterial, {\n      roughness: 0.5,\n      attach: \"material\",\n      color: color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Player, \"fivsRYs2xwTJGnD3xH9z+wnBzcY=\", false, function () {\n  return [useSpring, useBox, useKey, useKey, useKey, useKey];\n});\n\n_c = Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/Users/hoang_macbook/Desktop/Main/Me/website/explore/src/Cube.js"],"names":["React","useState","useEffect","useRef","useSpring","a","useBox","useKey","key","cb","callbackRef","current","handle","event","code","document","addEventListener","removeEventListener","Player","position","props","active","setActive","activeRef","mesh","timeout","toggleActive","setTimeout","Number","Math","random","clearTimeout","spring","config","mass","tension","friction","precision","scale","to","rotation","PI","color","ref","api","velocity","set"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport { useSpring } from '@react-spring/core'\nimport { a } from \"@react-spring/three\"\nimport { useBox } from 'use-cannon'\n\nfunction useKey(key, cb){\n    const callbackRef = useRef(cb)\n    useEffect(()=>{\n      callbackRef.current = cb\n    })\n  \n    useEffect(()=>{\n      function handle(event){\n        if(event.code ===key){\n          callbackRef.current(event)\n        }\n      }\n      document.addEventListener('keypress', handle)\n      return () => document.removeEventListener('keypress', handle)\n    }, [key])\n  }\n\nexport const Player = ({ position }, props) => {\n\n\n    \n\n    const [ active, setActive] = useState(0)\n    const activeRef = useRef(active)\n    activeRef.current = active\n    \n    const mesh = useRef(null)\n\n    useEffect(() => {\n        let timeout\n        const toggleActive = () => {\n        timeout = setTimeout(() => {\n            setActive(Number(!activeRef.current))\n            toggleActive()\n        }, Math.random() * 2000 + 1000)\n        }\n        toggleActive()\n        return () => {\n        clearTimeout(timeout)\n        }\n    }, [])\n\n    const { spring } = useSpring({\n        spring: active,\n        config: { mass: 5, tension: 400, friction: 50, precision: 0.0001 }\n    })\n\n    const scale = spring.to([0, 1], [1, 2])\n    const rotation = spring.to([0, 1], [0, Math.PI])\n    const color = spring.to([0, 1], [\"#50c878\", \"#e45858\"])\n\n\n    const [ref, api] = useBox(() => ({ mass: 1, position: position, rotation:[Math.random()*10-5,Math.random()*10-5,Math.random()*10-5], ...props }))\n    \n    useKey('KeyQ', ()=>{\n \n\n    })\n\n    useKey('KeyW', ()=>{\n\n    })\n\n    useKey('KeyE', ()=>{\n\n    })\n\n    useKey('KeyR', ()=>{\n    \n    })\n\n  return (\n\n    <a.mesh ref={ref}\n        onClick={()=>{\n            // api.velocity.set(0,5,0)\n            if(!active)\n                api.velocity.set(20*(Math.random()-0.5),0,20*(Math.random()-0.5))\n            }} \n      rotation={[0,rotation,0]}\n      position={position}\n    >\n      <boxBufferGeometry attach=\"geometry\" args={[1, 1, 1]}/>\n      <a.meshStandardMaterial roughness={0.5} attach=\"material\" color={color}/>\n    </a.mesh>\n  )\n}"]},"metadata":{},"sourceType":"module"}